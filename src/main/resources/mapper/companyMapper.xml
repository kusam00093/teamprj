<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.catwork.mapper.CompanyMapper"> 

	<!-- 전체 공고 가져오기 -->
	<!-- 마감지난 건 안뜨고 마감기한 낮은 순으로 정렬됨 -->
	<select id="getmainpostList">
		SELECT	POST_IDX,
				USER_IDX,
				TITLE,
				TRUNC(DEADLINE) - TRUNC(SYSDATE) AS DEADLINE_ORDER,
				CASE 
					WHEN TRUNC(DEADLINE) - TRUNC(SYSDATE) = 0 THEN 'D-Day'
					ELSE 'D-' || TO_CHAR(TRUNC(DEADLINE) - TRUNC(SYSDATE))
				END AS DEADLINE,
				TO_CHAR(SYSDATE, 'YY/MM/DD')
		FROM	POST_TB
		WHERE	TO_CHAR(DEADLINE, 'YYYYMMDD') >= TO_CHAR(SYSDATE, 'YYYYMMDD')
		ORDER BY DEADLINE_ORDER
	</select>
	
	<!-- 검색 공고 가져오기 -->
	<!-- 마감지난 건 안뜨고 마감기한 낮은 순으로 정렬됨 -->
	<select id="searchPostsByKeyword">
	    SELECT  POST_IDX,
	            USER_IDX,
	            TITLE,
	            TRUNC(DEADLINE) - TRUNC(SYSDATE) AS DEADLINE_ORDER,
	            CASE 
	                WHEN TRUNC(DEADLINE) - TRUNC(SYSDATE) = 0 THEN 'D-Day'
	                ELSE 'D-' || TO_CHAR(TRUNC(DEADLINE) - TRUNC(SYSDATE))
	            END AS DEADLINE,
	            TO_CHAR(SYSDATE, 'YY/MM/DD')
	    FROM    POST_TB
	    WHERE   TO_CHAR(DEADLINE, 'YYYYMMDD') >= TO_CHAR(SYSDATE, 'YYYYMMDD')
	            AND TITLE LIKE '%' || #{keyword} || '%'
	    ORDER BY DEADLINE_ORDER
	</select>
	
	<!-- 공고 상세보기 -->
	<select id="getViewPost" parameterType="int" resultType="com.catwork.domain.PostVo">
	    SELECT  POST_IDX,
	            USER_IDX,
	            TITLE,
	            CAREER,
	            GOWORK || ' ~ ' || GOHOME	GO,
	            SALARY,
	            TO_CHAR(DEADLINE, 'YY/MM/DD') AS DEADLINE,
	            INTRO,
	            EXPLAIN,
	            MANAGER,
	            MPHONE,
	            CREATED
	    FROM    POST_TB
	    WHERE   POST_IDX = #{post_idx}
	</select>
	
	<!-- 이력서 리스트 가져오기 -->
	<select id="getResumeList">
		SELECT RESUME_IDX, USER_IDX, TITLE, IMAGE, LINK, INTRO, TO_CHAR(CREATED, 'YYYY-MM-DD') CREATED, TYPE FROM RESUME_TB
		ORDER BY RESUME_IDX DESC
	</select>

	<!-- 기술 이름 가져오기 -->
	<select id="getSkillName">
		SELECT SKILL_IDX, NAME FROM SKILL_TB WHERE SKILL_IDX = #{skill_idx}
	</select>
	
	<!-- USER_IDX로 기업 회원 디테일 정보 가져오기, 현재는 9로 고정 -->
	<select id="getCompanyById">
		SELECT	COM_IDX,
				USER_IDX,
				NAME,
				LOGO,
				CNUM,
				REPRESENTATIVE,
				ZIP_CODE,
				ADDRESS,
				CTYPE, TO_CHAR(BDATE, 'YYYY-MM-DD') BDATE,
				TO_CHAR(CREATED, 'YYYY-MM-DD') CREATED
		FROM	COMPANY_TB
		WHERE	USER_IDX = #{user_idx}
	</select>
	
	<!-- user_idx로 기업 회원 공고 리스트 가져오기, 현재는 전부가져옴 -->
	<select id="getMyPost">
		SELECT POST_IDX, USER_IDX, TITLE, CAREER, GOWORK, GOHOME, SALARY, TO_CHAR(DEADLINE, 'YYYY-MM-DD') DEADLINE, INTRO, EXPLAIN, MANAGER, MPHONE, 
		TO_CHAR(CREATED, 'YYYY-MM-DD') CREATED, JOBTYPE, DEPARTMENT FROM POST_TB
	</select>
	
	<!-- 스킬 테이블 가져오기 -->
	<select id="getSkills">
		SELECT SKILL_IDX, NAME FROM SKILL_TB
	</select>
	
	<!-- post_idx 맥스값 -->
	<select id="selectpostidxmax" resultType="int">
		SELECT
		NVL(MAX(POST_IDX),0) + 1 FROM POST_TB
	</select>
	
	<!-- post insert -->
	<insert id="insertpost"
		parameterType="com.catwork.domain.PostVo">
		INSERT INTO POST_TB
		(POST_IDX, USER_IDX, TITLE, CAREER,
		GOWORK, GOHOME, SALARY,
		DEADLINE, INTRO, EXPLAIN,
		MANAGER, MPHONE, CREATED)
		VALUES
		((SELECT NVL(MAX(POST_IDX),0) + 1 FROM POST_TB), 9,
		#{title}, #{career}, #{gowork}, #{gohome}, #{salary},
		#{deadline}, #{intro}, #{explain},
		#{manager}, #{mphone}, sysdate)
	</insert>
	
	<!-- post skill insert -->
	<insert id="insertskills"
		parameterType="com.catwork.domain.PostSkillVo">
		INSERT INTO POST_SKILL_TB (POSKILL_IDX, POST_IDX, SKILL_IDX)
		VALUES ((SELECT NVL(MAX(POSKILL_IDX), 0) + 1 FROM POST_SKILL_TB), #{post_idx},
		#{skill_idx})
	</insert>
	
	<!-- 공고 하나의 정보 가져오기 -->
	<select id="getPostDetail">
		SELECT POST_IDX, USER_IDX, TITLE, CAREER, GOWORK, GOHOME, SALARY, TO_CHAR(DEADLINE, 'YYYY-MM-DD') DEADLINE, INTRO, EXPLAIN, MANAGER, MPHONE, 
		TO_CHAR(CREATED, 'YYYY-MM-DD') CREATED, JOBTYPE, DEPARTMENT FROM POST_TB WHERE POST_IDX = #{post_idx}
	</select>
	
	<!-- 공고 하나의 스킬 가져오기 -->
	<select id="getPostSkills">
		SELECT POSKILL_IDX, POST_IDX, SKILL_IDX FROM POST_SKILL_TB WHERE POST_IDX = #{post_idx}
	</select>
	
	<!-- 특정 공고의 지원 현황 리스트 가져오기 -->
	<select id="getParticipateList">
		SELECT APPLY_IDX, RESUME_IDX, POST_IDX, STATE, TO_CHAR(CREATED, 'YYYY-MM-DD') CREATED FROM APPLY_TB WHERE POST_IDX = #{post_idx}
	</select>
	
	<!-- 특정 지원 현황 하나 가져오기 -->
	<select id="getApply">
		SELECT APPLY_IDX, RESUME_IDX, POST_IDX, STATE, TO_CHAR(CREATED, 'YYYY-MM-DD') CREATED FROM APPLY_TB WHERE APPLY_IDX = #{apply_idx}
	</select>
	
	<!-- 페이징 이력서 리스트  -->
	<select id="countResumeList" resultType="int">
		SELECT COUNT(*) AS CNT FROM RESUME_TB
	</select>
	<select id="getResumeListPaging" resultType="com.catwork.domain.ResumeVo">
		SELECT 
		    r.RESUME_IDX,
		    R.TITLE,
		    P.NAME,
		    LISTAGG(S.NAME, ', ') WITHIN GROUP (ORDER BY S.SKILL_IDX) AS SKILLS
		FROM 
		    resume_tb r
		JOIN 
		    person_tb p ON r.user_idx = p.user_idx
		left JOIN 
		    resume_skill_tb rs ON r.resume_idx = rs.resume_idx
		left JOIN 
		    skill_tb s ON rs.skill_idx = s.skill_idx
		GROUP BY
		    r.RESUME_IDX,
		    R.TITLE,
		    P.NAME
		ORDER BY
		    r.RESUME_IDX
		OFFSET #{ arg0 } ROWS FETCH NEXT #{ arg1}
		ROWS ONLY
	</select>
</mapper>